from flask import Flask, request
import requests
import os
import openai

app = Flask(__name__)

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã ===
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
CHAT_ID = os.environ.get("CHAT_ID")
openai.api_key = os.environ.get("OPENAI_API_KEY")

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram ===
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "HTML"
    }
    requests.post(url, data=data)

# === Webhook –æ—Ç TradingView ===
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    message = data.get('message', 'üìà –°–∏–≥–Ω–∞–ª –æ—Ç TradingView!')
    send_telegram_message(f"üì¢ <b>–°–∏–≥–Ω–∞–ª:</b> {message}")
    return 'OK', 200

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ ===
@app.route('/', methods=['GET'])
def index():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç', 200

# === GPT-–∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ ===
@app.route('/gpt', methods=['POST'])
def gpt_analysis():
    send_telegram_message("üëÄ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ GPT-–∞–Ω–∞–ª–∏–∑, –Ω–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")

    data = request.json
    symbol = data.get("symbol", "EUR/USD")
    timeframe = data.get("timeframe", "M5")
    expiration = data.get("expiration", "5 –º–∏–Ω—É—Ç")
    market_open = data.get("market_open", True)

    user_prompt = f"""
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É {symbol}.
    –¢–∞–π–º—Ñ—Ä–µ–π–º: {timeframe}.
    –≠–∫—Å–ø–∏—Ä–∞—Ü–∏—è –æ–ø—Ü–∏–æ–Ω–∞: {expiration}.
    –†—ã–Ω–æ–∫ {'–æ—Ç–∫—Ä—ã—Ç' if market_open else '–∑–∞–∫—Ä—ã—Ç'}.
    –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: —Ç—Ä–µ–Ω–¥ –ø–æ M30, –≤—Ö–æ–¥ –ø–æ M5, —É—á–∏—Ç—ã–≤–∞–π VRVP, MA, —É—Ä–æ–≤–Ω–∏ S/R, —Å–≤–µ—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã.
    –í—ã–¥–∞–π —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ.
    """

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã —Ç–æ—Ä–≥–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Å–∏–≥–Ω–∞–ª—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å —É—Ä–æ–≤–Ω–∏ –≤—Ö–æ–¥–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ."},
                {"role": "user", "content": user_prompt}
            ],
            max_tokens=500,
            temperature=0.7
        )

        gpt_reply = response['choices'][0]['message']['content']
        send_telegram_message(f"üìä GPT-–ê–ù–ê–õ–ò–ó:\n{gpt_reply}")
        return 'OK', 200

    except Exception as e:
        send_telegram_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ GPT:\n{str(e)}")
        return '–û—à–∏–±–∫–∞', 500

# === –ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)
