# === telegram_webhook_bot.py ===

import os
import json
from flask import Flask, request
import telebot

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
BOT_TOKEN = os.environ.get("TELEGRAM_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")  # –Ω–∞–ø—Ä–∏–º–µ—Ä: https://yourapp.onrender.com/telegram
USER_STATUS_FILE = 'user_status.json'

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
def load_status():
    if os.path.exists(USER_STATUS_FILE):
        with open(USER_STATUS_FILE, 'r') as f:
            return json.load(f)
    return {}

def save_status():
    with open(USER_STATUS_FILE, 'w') as f:
        json.dump(user_status, f)

user_status = load_status()

# === Telegram –∫–æ–º–∞–Ω–¥—ã ===
@bot.message_handler(commands=['start'])
def handle_start(msg):
    cid = str(msg.chat.id)
    user_status[cid] = {'enabled': True}
    save_status()
    bot.send_message(cid, "üì° –ü—Ä–∏—ë–º —Å–∏–≥–Ω–∞–ª–æ–≤ –≤–∫–ª—é—á—ë–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /off —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å.")

@bot.message_handler(commands=['on'])
def handle_on(msg):
    cid = str(msg.chat.id)
    user_status[cid] = {'enabled': True}
    save_status()
    bot.send_message(cid, "‚úÖ –°–∏–≥–Ω–∞–ª—ã –≤–∫–ª—é—á–µ–Ω—ã.")

@bot.message_handler(commands=['off'])
def handle_off(msg):
    cid = str(msg.chat.id)
    user_status[cid] = {'enabled': False}
    save_status()
    bot.send_message(cid, "‚õî –°–∏–≥–Ω–∞–ª—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

@bot.message_handler(commands=['status'])
def handle_status(msg):
    cid = str(msg.chat.id)
    state = user_status.get(cid, {}).get("enabled", False)
    status = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if state else "–æ—Ç–∫–ª—é—á–µ–Ω—ã ‚õî"
    bot.send_message(cid, f"üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}")

# === Webhook –æ—Ç Telegram ===
@app.route('/telegram', methods=['POST'])
def telegram_webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return 'OK', 200

# === Webhook –æ—Ç TradingView ===
@app.route('/webhook', methods=['POST'])
def tradingview_webhook():
    data = request.get_json()
    if not data:
        return 'No data', 400

    text = format_signal(data)
    for cid, cfg in user_status.items():
        if cfg.get("enabled"):
            try:
                bot.send_message(cid, text, parse_mode='Markdown')
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

    return 'OK', 200

# === –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ ===
def format_signal(data):
    signal = data.get("signal", "SIGNAL")
    symbol = data.get("symbol", "UNKNOWN")
    tf = data.get("timeframe", "M?")
    return f"üìà *–°–∏–≥–Ω–∞–ª*: `{signal}`\nüí± –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: `{symbol}`\nüïí –¢–∞–π–º—Ñ—Ä–µ–π–º: `{tf}`"

# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
if __name__ == '__main__':
    bot.remove_webhook()
    bot.set_webhook(url=f'{WEBHOOK_URL}/telegram')
    app.run(host='0.0.0.0', port=10000)

