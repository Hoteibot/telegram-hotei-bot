import json
import os
from flask import Flask, request
import telebot
from telebot import types
from datetime import datetime

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.environ.get("TELEGRAM_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)
USER_STATUS_FILE = 'user_status.json'

# === Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
app = Flask(__name__)

# === –ó–∞–≥—Ä—É–∑–∫–∞/–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
def load_status():
    if os.path.exists(USER_STATUS_FILE):
        with open(USER_STATUS_FILE, 'r') as f:
            return json.load(f)
    return {}

def save_status():
    with open(USER_STATUS_FILE, 'w') as f:
        json.dump(user_status, f, ensure_ascii=False, indent=2)

user_status = load_status()

# === Telegram-–∫–æ–º–∞–Ω–¥—ã ===
@bot.message_handler(commands=['start'])
def start(msg):
    cid = str(msg.chat.id)
    name = msg.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    if cid not in user_status:
        user_status[cid] = {
            "enabled": True,
            "name": name,
            "joined": datetime.now().strftime("%Y-%m-%d")
        }
        print(f"‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {name} ({cid})")
    else:
        user_status[cid]["enabled"] = True
        print(f"üîÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞: {name} ({cid})")
    save_status()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(types.KeyboardButton("‚ñ∂Ô∏è –í–ö–õ–Æ–ß–ò–¢–¨"), types.KeyboardButton("‚õî –í–´–ö–õ–Æ–ß–ò–¢–¨"))

    bot.send_message(cid, "üì° –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏—ë–º–æ–º —Å–∏–≥–Ω–∞–ª–æ–≤.", reply_markup=markup)

@bot.message_handler(func=lambda msg: msg.text == "‚ñ∂Ô∏è –í–ö–õ–Æ–ß–ò–¢–¨")
def enable(msg):
    cid = str(msg.chat.id)
    if cid in user_status:
        user_status[cid]["enabled"] = True
        save_status()
        print(f"‚ñ∂Ô∏è –°–∏–≥–Ω–∞–ª—ã –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è {cid}")
        bot.send_message(cid, "‚úÖ –°–∏–≥–Ω–∞–ª—ã –≤–∫–ª—é—á–µ–Ω—ã.")

@bot.message_handler(func=lambda msg: msg.text == "‚õî –í–´–ö–õ–Æ–ß–ò–¢–¨")
def disable(msg):
    cid = str(msg.chat.id)
    if cid in user_status:
        user_status[cid]["enabled"] = False
        save_status()
        print(f"‚õî –°–∏–≥–Ω–∞–ª—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è {cid}")
        bot.send_message(cid, "‚õî –°–∏–≥–Ω–∞–ª—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

@bot.message_handler(commands=['status'])
def status(msg):
    cid = str(msg.chat.id)
    cfg = user_status.get(cid)
    if cfg:
        state = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if cfg.get("enabled") else "–æ—Ç–∫–ª—é—á–µ–Ω—ã ‚õî"
        bot.send_message(cid, f"üí¨ –°–∏–≥–Ω–∞–ª—ã {state}.")
    else:
        bot.send_message(cid, "‚ùó –í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start")

# === Webhook –æ—Ç Telegram ===
@app.route('/telegram', methods=['POST'])
def telegram_webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return 'OK', 200

# === Webhook –æ—Ç TradingView ===
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    if not data:
        print("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
        return 'No data', 400

    text = format_signal(data)
    print("üì© –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Ç TradingView:")
    print(text)
    print("üë• –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")

    for cid, cfg in user_status.items():
        print(f"‚Üí {cid} ({cfg.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}): {'‚úÖ' if cfg.get('enabled') else '‚õî'}")
        if cfg.get("enabled"):
            try:
                bot.send_message(cid, text, parse_mode='Markdown')
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {cid}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {cid}: {e}")

    return 'OK', 200

# === –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ ===
def format_signal(data):
    signal = data.get("signal", "")
    symbol = data.get("symbol", "?")
    tf = data.get("timeframe", "?")
    return f"üîî –°–∏–≥–Ω–∞–ª: *{signal.upper()}*\n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: `{symbol}`\n–¢–∞–π–º—Ñ—Ä–µ–π–º: `{tf}`"

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == '__main__':
    bot.remove_webhook()
    bot.set_webhook(url='https://telegram-hotei-bot.onrender.com/telegram')
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    app.run(host='0.0.0.0', port=10000)


